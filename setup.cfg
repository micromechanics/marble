[metadata]
url =https://jugit.fz-juelich.de/marble
author = Steffen Brinckmann, FionaDMello and the pyMARBLE team
author_email = sbrinckm@gmail.com
description = "Scientific instruments produce proprietary binary data that contains a multitude of primary and metadata. This project aims to create a software that supports the domain scientist in deciphering this data and metadata and supply python scripts that decipher the instrument measurements."
long_description = file:README_pypi.md
long_description_content_type = text/markdown; charset=UTF-8
license = MIT
classifiers =
    Programming Language :: Python
    License :: OSI Approved :: BSD License
    Programming Language :: Python :: 3

[options]
python_requires = >= 3.7
# https://setuptools.pypa.io/en/latest/userguide/dependency_management.html
install_requires =
    matplotlib
    pandas
    pyside6
    qt-material
    QtAwesome
    sortedcontainers
    h5py
    prettytable
packages = find_namespace:
include_package_data = True

[options.packages.find]
include = pymarble*

[options.extras_require]
# this matches the name used by -core and what is expected by some CI setups
devel =
    sphinx
    sphinx-rtd-theme
    pytest
    pytest-cov
    pytest-qt
    pytest-xvfb
    coverage

[options.entry_points]
# install the GUI starter as direct entrypoints
# overhead
gui_scripts =
    marbleGUI = pymarble.gui.gui:main
console_scripts =
    marbleCLI = pymarble.cli:main

[coverage:report]
show_missing = True
# omit =
#    # versioneer code
#    # pasta_eln/_version.py

[mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
ignore_missing_imports = true

[tool:pytest]
addopts = -p no:warnings